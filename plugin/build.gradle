plugins {
    id 'java'
    id 'xyz.jpenilla.run-paper' version '2.3.1'
}

group = 'com.lunardev'
version = '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT"

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'com.github.seeseemelk:MockBukkit-v1.20:3.9.0'
    testImplementation 'org.junit.platform:junit-platform-commons:1.5.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    runServer {
        minecraftVersion("1.21.8")
    }
}